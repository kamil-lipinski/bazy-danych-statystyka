/* 1. Stworzyć blok anonimowy wypisujący zmienną numer_max równą maksymalnemu 
numerowi Departamentu i dodaj do tabeli departamenty – departament z numerem 
o 10 wiekszym, typ pola dla zmiennej z nazwą nowego departamentu 
(zainicjować na EDUCATION) ustawić taki jak dla pola department_name w tabeli (%TYPE) */

SET SERVEROUTPUT ON;
DECLARE
    numer_max departments.department_id%TYPE;
    dep_name departments.department_name%TYPE:= 'EDUCATION';
BEGIN
    SELECT max(department_id) INTO numer_max FROM departments;
    DBMS_OUTPUT.PUT_LINE('Maksymalny numer departamentu: ' || numer_max);
    INSERT INTO departments(department_id, department_name) VALUES ((numer_max+10), dep_name);
    
    /* 2. Do poprzedniego skryptu dodaj instrukcje zmieniającą location_id (3000) dla dodanego departamentu  */
    UPDATE departments SET location_id = 3000 WHERE department_id = (numer_max+10);
    
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Wystąpił błąd: ' || SQLERRM);
    ROLLBACK; -- Wycofanie transakcji w przypadku błędu
END;

/* 3. Stwórz tabelę nowa z jednym polem typu varchar a następnie wpisz do 
niej za pomocą pętli liczby od 1 do 10 bez liczb 4 i 6 */

CREATE TABLE nowa(pole VARCHAR2(2));

BEGIN
  FOR i IN 1..10 LOOP
    IF i != 4 AND i != 6 THEN
        INSERT INTO nowa (pole) VALUES (TO_CHAR(i));
    END IF;
  END LOOP;
END;

/* 4. Wyciągnąć informacje z tabeli countries do jednej zmiennej (%ROWTYPE) 
dla kraju o identyfikatorze ‘CA’. Wypisać nazwę i region_id na ekran */

SET SERVEROUTPUT ON;
DECLARE
    kraj countries%ROWTYPE;
BEGIN
    SELECT * INTO kraj FROM countries WHERE country_id = 'CA';
    DBMS_OUTPUT.PUT_LINE('Nazwa kraju: ' || kraj.country_name);
    DBMS_OUTPUT.PUT_LINE('Region ID: ' || kraj.region_id);
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Wystąpił błąd: ' || SQLERRM);
END;

/* 5. Za pomocą tabeli INDEX BY wyciągnąć informacje o nazwach departamentów 
i wypisać na ekran 10 (numery 10,20,…,100) */

DECLARE
    TYPE deps_tab IS TABLE OF departments.department_name%TYPE INDEX BY BINARY_INTEGER;
    deps_names deps_tab;
BEGIN
    FOR i IN 1..10 LOOP
        SELECT department_name INTO deps_names(i*10) FROM departments WHERE department_id = i*10;
    END LOOP;
    
    FOR i IN 1..10 LOOP
        DBMS_OUTPUT.PUT_LINE('Numer departamentu: ' || i*10 );
        DBMS_OUTPUT.PUT_LINE('Nazwa departamentu: ' || deps_names(i*10));
        DBMS_OUTPUT.PUT_LINE('--------------------------------------------');
    END LOOP;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Wystąpił błąd: ' || SQLERRM);
END;

/* 6. Zmienić skrypt z 5 tak aby pojawiały się wszystkie informacje na 
ekranie (wstawić %ROWTYPE do tabeli) */

SET SERVEROUTPUT ON;
DECLARE
    TYPE deps_tab IS TABLE OF departments%ROWTYPE INDEX BY BINARY_INTEGER;
    deps_info deps_tab;
BEGIN
    FOR i IN 1..10 LOOP
        SELECT * INTO deps_info(i*10) FROM departments WHERE department_id = i*10;
    END LOOP;
    
    FOR i IN 1..10 LOOP
        DBMS_OUTPUT.PUT_LINE('Numer departamentu: ' || deps_info(i*10).department_id );
        DBMS_OUTPUT.PUT_LINE('Nazwa departamentu: ' || deps_info(i*10).department_name);
        DBMS_OUTPUT.PUT_LINE('Lokalizacja: ' || deps_info(i*10).location_id);
        DBMS_OUTPUT.PUT_LINE('Manager: ' || deps_info(i*10).manager_id);
        DBMS_OUTPUT.PUT_LINE('--------------------------------------------');
    END LOOP;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Wystąpił błąd: ' || SQLERRM);
END;

/* 7.  Zadeklaruj kursor jako wynagrodzenie, nazwisko dla departamentu o numerze 50. 
Dla elementów kursora wypisać na ekran, jeśli wynagrodzenie jest wyższe niż 3100: 
nazwisko osoby i tekst ‘nie dawać podwyżki’ w przeciwnym przypadku: nazwisko + ‘dać podwyżkę’ */

SET SERVEROUTPUT ON;
DECLARE
    CURSOR zad7 IS
        SELECT salary, last_name FROM employees WHERE department_id = 50;
    wiersz zad7%ROWTYPE;
BEGIN
    OPEN zad7;
    LOOP
        FETCH zad7 INTO wiersz;
        EXIT WHEN zad7%NOTFOUND;
        IF wiersz.salary > 3100 THEN
            DBMS_OUTPUT.PUT_LINE(wiersz.last_name || ' nie dawać podwyżki');
        ELSE
            DBMS_OUTPUT.PUT_LINE(wiersz.last_name || ' dać podwyżkę');
        END IF;
    END LOOP;
    CLOSE zad7;
END;

/* 8. Zadeklarować kursor zwracający zarobki imię i nazwisko pracownika z parametrami,
gdzie pierwsze dwa parametry określają widełki zarobków a trzeci część imienia pracownika. 
Wypisać na ekran pracowników:
a.   	z widełkami 1000- 5000 z częścią imienia a (może być również A)
b.   	z widełkami 5000-20000 z częścią imienia u (może być również U) */

SET SERVEROUTPUT ON;
DECLARE
    CURSOR zad8 (min_salary NUMBER, max_salary NUMBER, name_part VARCHAR2) IS
        SELECT salary, first_name, last_name FROM employees 
        WHERE salary BETWEEN min_salary AND max_salary AND 
        UPPER(first_name) LIKE '%' || UPPER(name_part) || '%';
    wiersz zad8%ROWTYPE;
BEGIN
    OPEN zad8(1000, 5000, 'a');
    DBMS_OUTPUT.PUT_LINE('z widełkami 1000- 5000 z częścią imienia a (może być również A)');
    LOOP
        FETCH zad8 INTO wiersz;
        EXIT WHEN zad8%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(wiersz.first_name || ' ' || wiersz.last_name || ' - ' || wiersz.salary);
    END LOOP;
    CLOSE zad8;
    
    OPEN zad8(5000, 20000, 'u');
    DBMS_OUTPUT.PUT_LINE(' ');
    DBMS_OUTPUT.PUT_LINE('z widełkami 5000- 20000 z częścią imienia a (może być również U)');
    LOOP
        FETCH zad8 INTO wiersz;
        EXIT WHEN zad8%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(wiersz.first_name || ' ' || wiersz.last_name || ' - ' || wiersz.salary);
    END LOOP;
    CLOSE zad8;
END;

/* 9. Stwórz procedury:
a.   dodającą wiersz do tabeli Jobs – z dwoma parametrami wejściowymi określającymi Job_id, Job_title, przetestuj działanie wrzuć wyjątki – co najmniej when others
b.   modyfikującą title w  tabeli Jobs – z dwoma parametrami id dla którego ma być modyfikacja oraz nową wartość dla Job_title – przetestować działanie, dodać swój wyjątek dla no Jobs updated – najpierw sprawdzić numer błędu
c.   usuwającą wiersz z tabeli Jobs  o podanym Job_id– przetestować działanie, dodaj wyjątek dla no Jobs deleted
d.   Wyciągającą zarobki i nazwisko (parametry zwracane przez procedurę) z tabeli employees dla pracownika o przekazanym jako parametr id
e.   dodającą do tabeli employees wiersz – większość parametrów ustawić na domyślne (id poprzez sekwencję), stworzyć wyjątek jeśli wynagrodzenie dodawanego pracownika jest wyższe niż 20000 */
